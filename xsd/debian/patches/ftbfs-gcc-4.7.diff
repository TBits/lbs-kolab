diff -ru xsd-3.3.0+dep/libcult/cult/mm/evptr.hxx xsd-3.3.0-1+dep/libcult/cult/mm/evptr.hxx
--- xsd-3.3.0+dep/xsd-srcdir/libcult/cult/mm/evptr.hxx	2010-01-01 13:12:06.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/libcult/cult/mm/evptr.hxx	2012-04-06 13:49:35.000000000 +0200
@@ -70,7 +70,7 @@
       Evptr&
       operator= (Evptr const& ep)
       {
-        assign (ep.cp_ ? ep.cp_ : ep.p_, ep.c_);
+        this->assign (ep.cp_ ? ep.cp_ : ep.p_, ep.c_);
 
         return *this;
       }
@@ -79,7 +79,7 @@
       Evptr&
       operator= (Evptr<Y> const& ep)
       {
-        assign (ep.cp_ ? ep.cp_ : ep.p_, ep.c_);
+        this->assign (ep.cp_ ? ep.cp_ : ep.p_, ep.c_);
 
         return *this;
       }
diff -ru xsd-3.3.0+dep/libcult/cult/mm/shptr.hxx xsd-3.3.0-1+dep/libcult/cult/mm/shptr.hxx
--- xsd-3.3.0+dep/xsd-srcdir/libcult/cult/mm/shptr.hxx	2010-01-01 13:12:06.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/libcult/cult/mm/shptr.hxx	2012-04-06 13:49:55.000000000 +0200
@@ -45,7 +45,7 @@
       Shptr&
       operator= (Shptr const& ap)
       {
-        assign (ap);
+        this->assign (ap);
         return *this;
       }
 
@@ -53,7 +53,7 @@
       Shptr&
       operator= (Shptr<Y> const& ap)
       {
-        assign (ap);
+        this->assign (ap);
         return *this;
       }
 
diff -ru xsd-3.3.0+dep/xsd/dist/examples/build/cxx/compilers.make xsd-3.3.0-1+dep/xsd/dist/examples/build/cxx/compilers.make
--- xsd-3.3.0+dep/xsd-srcdir/xsd/dist/examples/build/cxx/compilers.make	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/dist/examples/build/cxx/compilers.make	2012-04-06 15:25:06.000000000 +0200
@@ -40,6 +40,20 @@
 endif
 endif
 
+# Clang
+#
+ifeq ($(cxx_id),)
+ifeq ($(shell echo '$(cxx_sign)' | sed -e 's/^.* clang .*$$//'),)
+cxx_id := clang
+endif
+endif
+
+ifeq ($(cxx_id),)
+ifeq ($(shell echo '$(cxx_sign)' | sed -e 's/^.* Clang .*$$//'),)
+cxx_id := clang
+endif
+endif
+
 # Sun C++ (CC)
 #
 ifeq ($(cxx_id),)
diff -ru xsd-3.3.0+dep/xsd/dist/examples/build/cxx/rules.make xsd-3.3.0-1+dep/xsd/dist/examples/build/cxx/rules.make
--- xsd-3.3.0+dep/xsd-srcdir/xsd/dist/examples/build/cxx/rules.make	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/dist/examples/build/cxx/rules.make	2012-04-06 15:25:06.000000000 +0200
@@ -12,6 +12,11 @@
   CXXFLAGS := -W -Wall -O3
 endif
 
+# Clang
+#
+ifeq ($(cxx_id),clang)
+  CXXFLAGS := -W -O3
+endif
 
 # Intel C++
 #
diff -ru xsd-3.3.0+dep/xsd/libxsd/xsd/cxx/parser/expat/elements.txx xsd-3.3.0-1+dep/xsd/libxsd/xsd/cxx/parser/expat/elements.txx
--- xsd-3.3.0+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/expat/elements.txx	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/expat/elements.txx	2012-04-06 15:25:23.000000000 +0200
@@ -594,7 +594,7 @@
             {
               try
               {
-                start_element (ns, name, 0);
+                this->start_element (ns, name, 0);
               }
               catch (const schema_exception<C>& e)
               {
@@ -621,7 +621,7 @@
               {
                 try
                 {
-                  start_element (ns, name, 0);
+                  this->start_element (ns, name, 0);
                 }
                 catch (const schema_exception<C>& e)
                 {
@@ -693,7 +693,7 @@
                   }
 
                   ro_string<C> ro_id (id);
-                  start_element (ns, name, &ro_id);
+                  this->start_element (ns, name, &ro_id);
                 }
                 catch (const schema_exception<C>& e)
                 {
@@ -713,7 +713,7 @@
 
             try
             {
-              attribute (ns, name, value);
+              this->attribute (ns, name, value);
             }
             catch (const schema_exception<C>& e)
             {
@@ -748,7 +748,7 @@
 
           try
           {
-            end_element (ns, name);
+            this->end_element (ns, name);
           }
           catch (const schema_exception<C>& e)
           {
@@ -777,7 +777,7 @@
 
             try
             {
-              characters (str);
+              this->characters (str);
             }
             catch (const schema_exception<C>& e)
             {
diff -ru xsd-3.3.0+dep/xsd/libxsd/xsd/cxx/parser/non-validating/parser.txx xsd-3.3.0-1+dep/xsd/libxsd/xsd/cxx/parser/non-validating/parser.txx
--- xsd-3.3.0+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/non-validating/parser.txx	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/non-validating/parser.txx	2012-04-06 15:25:23.000000000 +0200
@@ -164,15 +164,15 @@
           if (ns == xml::bits::xmlns_namespace<C> ())
             return;
 
-          if (!_attribute_impl (ns, name, value))
-            _any_attribute (ns, name, value);
+          if (!this->_attribute_impl (ns, name, value))
+            this->_any_attribute (ns, name, value);
         }
 
         template <typename C>
         void simple_content<C>::
         _characters (const ro_string<C>& str)
         {
-          _characters_impl (str);
+          this->_characters_impl (str);
         }
 
 
@@ -190,15 +190,15 @@
           if (s.depth_++ > 0)
           {
             if (s.any_)
-              _start_any_element (ns, name, type);
+              this->_start_any_element (ns, name, type);
             else if (s.parser_)
               s.parser_->_start_element (ns, name, type);
           }
           else
           {
-            if (!_start_element_impl (ns, name, type))
+            if (!this->_start_element_impl (ns, name, type))
             {
-              _start_any_element (ns, name, type);
+              this->_start_any_element (ns, name, type);
               s.any_ = true;
             }
             else if (s.parser_ != 0)
@@ -235,7 +235,7 @@
 
               this->_post_impl ();
 
-              if (!_end_element_impl (ns, name))
+              if (!this->_end_element_impl (ns, name))
                 assert (false);
             }
           }
@@ -246,7 +246,7 @@
             if (--s.depth_ > 0)
             {
               if (s.any_)
-                _end_any_element (ns, name);
+                this->_end_any_element (ns, name);
               else if (s.parser_)
                 s.parser_->_end_element (ns, name);
             }
@@ -255,10 +255,10 @@
               if (s.parser_ != 0 && !s.any_)
                 s.parser_->_post_impl ();
 
-              if (!_end_element_impl (ns, name))
+              if (!this->_end_element_impl (ns, name))
               {
                 s.any_ = false;
-                _end_any_element (ns, name);
+                this->_end_any_element (ns, name);
               }
             }
           }
@@ -292,14 +292,14 @@
           if (s.depth_ > 0)
           {
             if (s.any_)
-              _any_attribute (ns, name, value);
+              this->_any_attribute (ns, name, value);
             else if (s.parser_)
               s.parser_->_attribute (ns, name, value);
           }
           else
           {
-            if (!_attribute_impl (ns, name, value))
-              _any_attribute (ns, name, value);
+            if (!this->_attribute_impl (ns, name, value))
+              this->_any_attribute (ns, name, value);
           }
         }
 
@@ -312,14 +312,14 @@
           if (s.depth_ > 0)
           {
             if (s.any_)
-              _any_characters (str);
+              this->_any_characters (str);
             else if (s.parser_)
               s.parser_->_characters (str);
           }
           else
           {
-            if (!_characters_impl (str))
-              _any_characters (str);
+            if (!this->_characters_impl (str))
+              this->_any_characters (str);
           }
         }
 
diff -ru xsd-3.3.0+dep/xsd/libxsd/xsd/cxx/parser/validating/parser.txx xsd-3.3.0-1+dep/xsd/libxsd/xsd/cxx/parser/validating/parser.txx
--- xsd-3.3.0+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/validating/parser.txx	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/parser/validating/parser.txx	2012-04-06 15:25:23.000000000 +0200
@@ -93,8 +93,8 @@
                         const ro_string<C>& name,
                         const ro_string<C>* type)
         {
-          if (!_start_element_impl (ns, name, type))
-            _unexpected_element (ns, name);
+          if (!this->_start_element_impl (ns, name, type))
+            this->_unexpected_element (ns, name);
         }
 
         template <typename C>
@@ -102,8 +102,8 @@
         _end_element (const ro_string<C>& ns,
                       const ro_string<C>& name)
         {
-          if (!_end_element_impl (ns, name))
-            _unexpected_element (ns, name);
+          if (!this->_end_element_impl (ns, name))
+            this->_unexpected_element (ns, name);
         }
 
         template <typename C>
@@ -129,16 +129,16 @@
           if (ns == xml::bits::xmlns_namespace<C> ())
             return;
 
-          if (!_attribute_impl (ns, name, value))
-            _unexpected_attribute (ns, name, value);
+          if (!this->_attribute_impl (ns, name, value))
+            this->_unexpected_attribute (ns, name, value);
         }
 
         template <typename C>
         void empty_content<C>::
         _characters (const ro_string<C>& s)
         {
-          if (!_characters_impl (s))
-            _unexpected_characters (s);
+          if (!this->_characters_impl (s))
+            this->_unexpected_characters (s);
         }
 
         //
@@ -218,15 +218,15 @@
           if (ns == xml::bits::xmlns_namespace<C> ())
             return;
 
-          if (!_attribute_impl (ns, name, value))
-            _unexpected_attribute (ns, name, value);
+          if (!this->_attribute_impl (ns, name, value))
+            this->_unexpected_attribute (ns, name, value);
         }
 
         template <typename C>
         void simple_content<C>::
         _characters (const ro_string<C>& str)
         {
-          if (!_characters_impl (str))
+          if (!this->_characters_impl (str))
           {
             // Mixed content is implemented in the generated code
             // by overriding _characters_impl and forwarding to
@@ -245,7 +245,7 @@
                   c != C (0x0D) && // carriage return
                   c != C (0x09) && // tab
                   c != C (0x0A))
-                _unexpected_characters (str);
+                this->_unexpected_characters (str);
             }
           }
         }
@@ -322,14 +322,14 @@
           if (s.depth_++ > 0)
           {
             if (s.any_)
-              _start_any_element (ns, name, type);
+              this->_start_any_element (ns, name, type);
             else if (s.parser_)
               s.parser_->_start_element (ns, name, type);
           }
           else
           {
-            if (!_start_element_impl (ns, name, type))
-              _unexpected_element (ns, name);
+            if (!this->_start_element_impl (ns, name, type))
+              this->_unexpected_element (ns, name);
             else if (s.parser_ != 0)
               s.parser_->_pre_impl ();
           }
@@ -364,7 +364,7 @@
 
               this->_post_impl ();
 
-              if (!_end_element_impl (ns, name))
+              if (!this->_end_element_impl (ns, name))
                 assert (false);
             }
           }
@@ -375,7 +375,7 @@
             if (--s.depth_ > 0)
             {
               if (s.any_)
-                _end_any_element (ns, name);
+                this->_end_any_element (ns, name);
               else if (s.parser_)
                 s.parser_->_end_element (ns, name);
             }
@@ -384,8 +384,8 @@
               if (s.parser_ != 0 && !s.any_)
                 s.parser_->_post_impl ();
 
-              if (!_end_element_impl (ns, name))
-                _unexpected_element (ns, name);
+              if (!this->_end_element_impl (ns, name))
+                this->_unexpected_element (ns, name);
             }
           }
         }
@@ -418,14 +418,14 @@
           if (s.depth_ > 0)
           {
             if (s.any_)
-              _any_attribute (ns, name, value);
+              this->_any_attribute (ns, name, value);
             else if (s.parser_)
               s.parser_->_attribute (ns, name, value);
           }
           else
           {
-            if (!_attribute_impl (ns, name, value))
-              _unexpected_attribute (ns, name, value);
+            if (!this->_attribute_impl (ns, name, value))
+              this->_unexpected_attribute (ns, name, value);
           }
         }
 
@@ -438,13 +438,13 @@
           if (s.depth_ > 0)
           {
             if (s.any_)
-              _any_characters (str);
+              this->_any_characters (str);
             else if (s.parser_)
               s.parser_->_characters (str);
           }
           else
           {
-            if (!_characters_impl (str))
+            if (!this->_characters_impl (str))
             {
               // Mixed content is implemented in the generated code
               // by overriding _characters_impl and forwarding to
@@ -463,7 +463,7 @@
                     c != C (0x0D) && // carriage return
                     c != C (0x09) && // tab
                     c != C (0x0A))
-                  _unexpected_characters (str);
+                  this->_unexpected_characters (str);
               }
             }
           }
diff -ru xsd-3.3.0+dep/xsd/libxsd/xsd/cxx/zc-istream.txx xsd-3.3.0-1+dep/xsd/libxsd/xsd/cxx/zc-istream.txx
--- xsd-3.3.0+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/zc-istream.txx	2010-04-28 08:58:09.000000000 +0200
+++ xsd-3.3.0-1+dep/xsd-srcdir/xsd/libxsd/xsd/cxx/zc-istream.txx	2012-04-06 15:25:23.000000000 +0200
@@ -32,7 +32,7 @@
       C* b (const_cast<C*> (str_.data ()));
       C* e (b + str_.size ());
 
-      setg (b, b, e);
+      this->setg (b, b, e);
     }
 
     template <typename C>
--- ./xsd-srcdir/xsd/libxsd/xsd/cxx/parser/non-validating/xml-schema-pskel.txx.orig	2010-04-28 06:58:09.000000000 +0000
+++ ./xsd-srcdir/xsd/libxsd/xsd/cxx/parser/non-validating/xml-schema-pskel.txx	2012-05-22 22:18:33.917842573 +0000
@@ -20,7 +20,7 @@
                              const ro_string<C>& name,
                              const ro_string<C>* type)
         {
-          _start_any_element (ns, name, type);
+          this->_start_any_element (ns, name, type);
           this->complex_content<C>::context_.top ().any_ = true;
           return true;
         }
@@ -30,7 +30,7 @@
         _end_element_impl (const ro_string<C>& ns, const ro_string<C>& name)
         {
           this->complex_content<C>::context_.top ().any_ = false;
-          _end_any_element (ns, name);
+          this->_end_any_element (ns, name);
           return true;
         }
 
@@ -41,7 +41,7 @@
                          const ro_string<C>& name,
                          const ro_string<C>& value)
         {
-          _any_attribute (ns, name, value);
+          this->_any_attribute (ns, name, value);
           return true;
         }
 
@@ -49,7 +49,7 @@
         bool any_type_pskel<C>::
         _characters_impl (const ro_string<C>& s)
         {
-          _any_characters (s);
+          this->_any_characters (s);
           return true;
         }
 
@@ -60,7 +60,7 @@
         bool any_simple_type_pskel<C>::
         _characters_impl (const ro_string<C>& s)
         {
-          _any_characters (s);
+          this->_any_characters (s);
           return true;
         }
       }
--- ./xsd-srcdir/xsd/libxsd/xsd/cxx/parser/validating/xml-schema-pskel.txx.orig	2012-05-22 22:21:38.117845513 +0000
+++ ./xsd-srcdir/xsd/libxsd/xsd/cxx/parser/validating/xml-schema-pskel.txx	2012-05-22 22:23:05.257848705 +0000
@@ -20,7 +20,7 @@
                              const ro_string<C>& name,
                              const ro_string<C>* type)
         {
-          _start_any_element (ns, name, type);
+          this->_start_any_element (ns, name, type);
           this->complex_content<C>::context_.top ().any_ = true;
           return true;
         }
@@ -30,7 +30,7 @@
         _end_element_impl (const ro_string<C>& ns, const ro_string<C>& name)
         {
           this->complex_content<C>::context_.top ().any_ = false;
-          _end_any_element (ns, name);
+          this->_end_any_element (ns, name);
           return true;
         }
 
@@ -41,7 +41,7 @@
                                    const ro_string<C>& name,
                                    const ro_string<C>& value)
         {
-          _any_attribute (ns, name, value);
+          this->_any_attribute (ns, name, value);
           return true;
         }
 
@@ -49,7 +49,7 @@
         bool any_type_pskel<C>::
         _characters_impl (const ro_string<C>& s)
         {
-          _any_characters (s);
+          this->_any_characters (s);
           return true;
         }
 
@@ -60,7 +60,7 @@
         bool any_simple_type_pskel<C>::
         _characters_impl (const ro_string<C>& s)
         {
-          _any_characters (s);
+          this->_any_characters (s);
           return true;
         }
       }
--- ./xsd-srcdir/xsd/libxsd/xsd/cxx/tree/parsing.txx.orig	2012-05-22 22:25:24.765850825 +0000
+++ ./xsd-srcdir/xsd/libxsd/xsd/cxx/tree/parsing.txx	2012-05-22 22:25:56.645847547 +0000
@@ -299,7 +299,7 @@
 
           if (j != basic_string<C>::npos)
           {
-            push_back (
+            this->push_back (
               traits<T, C, ST>::create (
                 basic_string<C> (data + i, j - i), parent, 0, 0));
 
@@ -309,7 +309,7 @@
           {
             // Last element.
             //
-            push_back (
+            this->push_back (
               traits<T, C, ST>::create (
                 basic_string<C> (data + i, size - i), parent, 0, 0));
 
