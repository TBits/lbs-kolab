#!/usr/bin/make -f

DH_VERBOSE=1

%:
	dh $@

override_dh_auto_build:
	mkdir -p $$HOME/.composer
	echo '{}' > $$HOME/.composer/composer.json
	patch -p1 < debian/patches/add-composer-autoloader.diff || :
	if [ -x "$$(which composer.sh 2>/dev/null)" ]; then \
		composer.sh -vvv dumpautoload --optimize ; \
	else \
		composer -vvv dumpautoload --optimize ; \
	fi
	sed -i -e "s|.baseDir . '/../../../share|'/usr/share|" $(CURDIR)/vendor/composer/autoload_psr4.php
	sed -i -e "s|.baseDir . '/../../../share|'/usr/share|" $(CURDIR)/vendor/composer/autoload_namespaces.php
	sed -i -e "s|.baseDir . '/../../../share|'/usr/share|" $(CURDIR)/vendor/composer/autoload_classmap.php
	sed -i -e "s|__DIR__ . '/../..' . '/../../../share|'/usr/share|" $(CURDIR)/vendor/composer/autoload_static.php

	rm -rvf tests/

	# Compress the CSS
	for file in `find $(CURDIR) -type f -name "*.css"`; do \
		asset_loc=$$(dirname $$(echo $${file} | sed \
				-e "s|$(CURDIR)/plugins/|$(CURDIR)/public_html/assets/plugins/|g" \
				-e "s|$(CURDIR)/program/|$(CURDIR)/public_html/assets/program/|g" \
				-e "s|$(CURDIR)/skins/|$(CURDIR)/public_html/assets/skins/|g") ; \
			) ; \
		mkdir -p $${asset_loc} ; \
		echo "$${file} -> $${asset_loc}/$$(basename $${file})" ; \
		cat $${file} | cssmin > $${asset_loc}/$$(basename $${file}) || \
			cp -vf $${file} $${asset_loc}/$$(basename $${file}) ; \
	done

	# Compress the JS, but not the already minified
	for file in `find $(CURDIR)/ -type f -name "*.js" ! -name "*.min.js"`; do \
		asset_loc=$$(dirname $$(echo $${file} | sed \
				-e "s|$(CURDIR)/plugins/|$(CURDIR)/public_html/assets/plugins/|g" \
				-e "s|$(CURDIR)/program/|$(CURDIR)/public_html/assets/program/|g" \
				-e "s|$(CURDIR)/skins/|$(CURDIR)/public_html/assets/skins/|g") ; \
			) ; \
		mkdir -p $${asset_loc} ; \
		echo "$${file} -> $${asset_loc}/$$(basename $${file})" ; \
		uglifyjs $${file} > $${asset_loc}/$$(basename $${file}) || \
			cp -vf $${file} $${asset_loc}/$$(basename $${file}) ; \
	done

	# The already minied JS can just be copied over to the assets location
	for file in `find $(CURDIR)/ -type f -name "*.min.js"`; do \
		asset_loc=$$(dirname $$(echo $${file} | sed \
				-e "s|$(CURDIR)/plugins/|$(CURDIR)/public_html/assets/plugins/|g" \
				-e "s|$(CURDIR)/program/|$(CURDIR)/public_html/assets/program/|g" \
				-e "s|$(CURDIR)/skins/|$(CURDIR)/public_html/assets/skins/|g") ; \
			) ; \
		mkdir -p $${asset_loc} ; \
		cp -vf $${file} $${asset_loc}/$$(basename $${file}) ; \
	done

	# Other assets
	for file in $$(find $(CURDIR)/plugins/ $(CURDIR)/program/ $(CURDIR)/skins/ -type f \
			-name "*.eot" -o \
			-name "*.gif" -o \
			-name "*.ico" -o \
			-name "*.jpg" -o \
			-name "*.mp3" -o \
			-name "dummy.pdf" -o \
			-name "*.png" -o \
			-name "*.svg" -o \
			-name "*.swf" -o \
			-name "*.tif" -o \
			-name "*.tiff" -o \
			-name "*.ttf" -o \
			-name "*.wav" -o \
			-name "*.woff" \
		); do \
		asset_loc=$$(dirname $$(echo $${file} | sed \
				-e "s|$(CURDIR)/plugins/|$(CURDIR)/public_html/assets/plugins/|g" \
				-e "s|$(CURDIR)/program/|$(CURDIR)/public_html/assets/program/|g" \
				-e "s|$(CURDIR)/skins/|$(CURDIR)/public_html/assets/skins/|g") ; \
			) ; \
		mkdir -p $${asset_loc} ; \
		mv -vf $${file} $${asset_loc}/$$(basename $${file}); \
	done

	for plugin in `find $(CURDIR)/plugins/ -type d -mindepth 1 -maxdepth 1 -exec basename {} \;)`; do \
		pkgname=$$(echo $${plugin} | sed -e 's/_/-/g') ; \
		if [ -f "$(CURDIR)/plugins/$${plugin}/config.inc.php.dist" ]; then \
			mv $(CURDIR)/plugins/$${plugin}/config.inc.php.dist $(CURDIR)/config/$${plugin}.inc.php ; \
			echo "etc/roundcubemail/$${plugin}.inc.php usr/share/roundcubemail/plugins/$${plugin}/config.inc.php" >> debian/roundcubemail-plugin-$${pkgname}.links ; \
			echo "config/$${plugin}.inc.php etc/roundcubemail/" >> debian/roundcubemail-plugin-$${pkgname}.install ; \
		fi ; \
		if [ -d "$(CURDIR)/public_html/assets/plugins/$${plugin}" ]; then \
			echo "public_html/assets/plugins/$${plugin} usr/share/roundcubemail/public_html/assets/plugins" >> debian/roundcubemail-plugin-$${pkgname}.install ; \
		fi ; \
		echo "usr/share/roundcubemail/plugins/$${plugin}" >> debian/roundcubemail-plugin-$${pkgname}.dirs ; \
		echo "plugins/$${plugin} usr/share/roundcubemail/plugins/" >> debian/roundcubemail-plugin-$${pkgname}.install ; \
		if [ -d "$(CURDIR)/plugins/$${plugin}/lib/Roundcube" ]; then \
			echo "usr/share/roundcubemail/plugins/$${plugin}/lib" >> debian/roundcubemail-plugin-$${pkgname}.dirs ; \
			echo "plugins/$${plugin}/lib/Roundcube usr/share/roundcubemail/plugins/$${plugin}/lib/" >> debian/roundcubemail-plugin-$${pkgname}.install ; \
		fi ; \
		echo "" >> debian/control ; \
		echo "Package: roundcubemail-plugin-$${pkgname}" >> debian/control ; \
		echo "Architecture: all" >> debian/control ; \
		echo "Depends: roundcubemail-core" >> debian/control ; \
		echo "Description: $${plugin}} plugin for Roundcube" >> debian/control ; \
		echo "" >> debian/control ; \
		sed -i -e "/Files:/ i\
 roundcubemail-plugin-$${plugin} deb web extra" debian/control ; \
	done

	if [ -f "/etc/plesk-release" ]; then \
		cp -v ../SOURCES/plesk.config.inc.php config/config.inc.php ; \
		cp -v ../SOURCES/plesk.password.inc.php config/password.inc.php ; \
	else \
		mv config/config.inc.php.sample config/config.inc.php ; \
	fi

	dh_auto_build

override_dh_install:
	if [ ! -f "/etc/plesk-release" ]; then \
		mkdir -p $(CURDIR)/debian/roundcubemail/etc/apache2/sites-available ; \
		install -pm 644 $(CURDIR)/debian/conf/roundcubemail.conf $(CURDIR)/debian/roundcubemail/etc/apache2/sites-available/roundcubemail.conf ; \
	fi

	dh_install

override_dh_compress:
	dh_compress -Xsql
